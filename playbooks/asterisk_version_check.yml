---
- import_playbook: ../include/common.yml
  vars:
    target_hosts: all

- name: Check Asterisk Version on Target Hosts
  hosts: all
  become: yes
  become_method: sudo
  gather_facts: no

  vars_files:
    - /etc/ansible/secrets.yml

  vars:
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o ConnectionAttempts=1 -o UserKnownHostsFile=/dev/null'
    log_file: "/var/log/os_version_check.log"

  pre_tasks:
    - name: Set timestamp for consistent logging
      set_fact:
        run_timestamp: "{{ lookup('pipe', 'date +%Y%m%d-%H%M%S') }}"
        cacheable: yes
      run_once: true
      delegate_to: localhost

    - name: Initialize log file with header
      delegate_to: localhost
      shell: |
        LOG_FILE="/etc/ansible/logs/playbooks/asterisk_versions_{{ run_timestamp }}.log"
        echo "Asterisk Version Report - $(date)" > "$LOG_FILE"
      run_once: true
      changed_when: false

  tasks:
    - name: Ensure ansible_ssh_pass is set
      set_fact:
        ansible_ssh_pass: "{{ passwords[inventory_hostname] }}"
        ansible_become_pass: "{{ passwords[inventory_hostname] }}"
      no_log: true 

    - name: Coletar fatos do sistema
      setup:


    - name: Get Asterisk version
      raw: asterisk -V 2>/dev/null || echo "Asterisk not found or not running"
      register: asterisk_version
      ignore_errors: true
      changed_when: false

    - name: Log Asterisk version to file
      delegate_to: localhost
      lineinfile:
        path: "/etc/ansible/logs/playbooks/asterisk_versions_{{ run_timestamp }}.log"
        line: "{{ inventory_hostname }}: {{ asterisk_version.stdout | default('Error retrieving version') | trim }}"
        create: yes
      changed_when: false
...

